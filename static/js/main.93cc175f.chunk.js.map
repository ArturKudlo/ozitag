{"version":3,"sources":["components/pages/auth/PageAuth/PageAuth.tsx","components/pages/auth/LoginForm/LoginForm.tsx","components/pages/profile/PageProfile/PageProfile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageAuth","history","useHistory","useEffect","localStorage","getItem","push","authenticate","values","a","body","JSON","stringify","clientId","fetch","host","method","headers","response","json","data","ok","Error","message","console","log","setItem","alert","validateEmail","value","error","test","validatePassword","length","LoginForm","initialValues","email","password","onSubmit","errors","touched","isValidating","className","name","type","placeholder","validate","PageProfile","useState","userData","setUserData","loginDataJson","loginData","parse","tokenType","accessToken","logout","fetchUserProfile","removeItem","onClick","App","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93cc175f.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {LoginForm} from \"../index\"\nimport {MyFormValues} from \"../LoginForm/LoginForm\"\nimport { useHistory } from \"react-router-dom\";\n\nconst host = 'https://tager.dev.ozitag.com'\nconst url = host + '/api/auth/user'\n\nexport const PageAuth = () => {\n    const history = useHistory();\n\n    useEffect(() => {\n        const loginData = localStorage.getItem('loginData')\n        if (loginData) {\n            history.push(\"/\");\n        }\n    },[])\n\n    const authenticate = async (values: MyFormValues) => {\n        const body = JSON.stringify({...values, clientId: 1})\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n            console.log({data, response})\n            localStorage.setItem('loginData', JSON.stringify(data.data));\n            history.push(\"/\");\n        } catch (error) {\n            alert(error.message || 'Something went wrong')\n        }\n    }\n\n    return (\n        <div>\n            <h2>Please, authorize!</h2>\n            <LoginForm authenticate={authenticate}/>\n        </div>\n    )\n}","import React from 'react';\nimport {Formik, Field, Form} from \"formik\";\nimport \"./LoginForm.css\";\n\nexport type MyFormValues = {\n    email: string\n    password: string\n}\n\ntype PropsType = {\n    authenticate: (values: MyFormValues) => void\n}\n\nconst validateEmail= (value: string): string | undefined =>  {\n    let error;\n    if (!value) {\n        error = 'Email required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = 'Invalid email address';\n    }\n    return error;\n}\n\nconst validatePassword = (value: string): string | undefined => {\n    let error;\n    if (value.length < 4) {\n        error = 'Minimum 4 symbols required';\n    }\n    return error;\n}\n\nexport const LoginForm = ({authenticate}: PropsType) => {\n    const initialValues: MyFormValues = {email: '', password: ''}\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={async (values) => {\n                    authenticate(values)\n                }}\n            >\n                {({ errors, touched, isValidating }) => (\n                    <Form className='form__content'>\n                        <Field className='form__content--email btn' name=\"email\" type=\"email\" placeholder=\"email\" validate={validateEmail}/>\n                        {errors.email && touched.email && <div className='form__error'>{errors.email}</div>}\n                        <Field className='form__content--password btn' name=\"password\" type=\"password\" placeholder=\"password\" validate={validatePassword}/>\n                        {errors.password && touched.password && <div className='form__error'>{errors.password}</div>}\n                        <button className='form__content--submit btn' type=\"submit\">Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport \"./PageProfile.css\"\n\nconst host = 'https://tager.dev.ozitag.com'\nconst url = host + '/api/tager/user/profile'\n\ninterface IUserData {\n    name: string\n    email: string\n    id: number\n}\n\nexport const PageProfile = () => {\n    const [userData, setUserData] = useState<IUserData>()\n    const history = useHistory();\n    useEffect(() => {\n        const loginDataJson = localStorage.getItem('loginData')\n        if (!loginDataJson) {\n            history.push(\"/login\");\n        } else {\n            const fetchUserProfile = async () => {\n                try {\n                    const loginData = JSON.parse(loginDataJson)\n                    const response = await fetch(url, {\n                        method: 'GET',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Authorization': `${loginData.tokenType} ${loginData.accessToken}`\n                        },\n\n                    });\n                    const data = await response.json();\n                    if (!response.ok) {\n                        throw new Error(data.message);\n                    }\n                    console.log({data, response})\n                    setUserData(data.data)\n                } catch (error) {\n                    logout()\n                    alert(error.message || 'Something went wrong')\n                }\n            }\n            fetchUserProfile()\n        }\n    },[])\n\n    const logout = () => {\n        localStorage.removeItem('loginData')\n        history.push('/login')\n    }\n\n    return (\n        <div className='profile__content'>\n            <h2>Page Profile</h2>\n            <h4>Name: {userData?.name}</h4>\n            <h4>Email: {userData?.email}</h4>\n            <button className='profile__content--logout' onClick={logout}>Log Out</button>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {PageAuth, PageProfile} from \"./components/pages\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <PageProfile />\n                </Route>\n                <Route exact path=\"/login\">\n                    <PageAuth />\n                </Route>\n                <Route path=\"*\">\n                    <Redirect to=\"/\" />\n                </Route>\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}